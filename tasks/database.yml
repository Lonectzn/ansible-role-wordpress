---

# Verify we can install and that it is not already installed

- block:

  - name: create database
    mysql_db: name="{{ wp_db_name }}" login_user="{{ wp_db_root_user }}" login_password="{{ wp_db_root_pass }}" state=present

  - name: give wordpress user privileges on the the specified database
    mysql_user: name="{{ wp_db_user }}" password="{{ wp_db_pass }}" state=present priv="{{ wp_db_name }}.*:ALL" login_user="{{ wp_db_root_user }}" login_password="{{ wp_db_root_pass }}"

  when: wp_db_root_user is defined

- name: ensure the wordpress database exists
  command: mysql --batch --skip-column-names -e "SHOW DATABASES LIKE '{{ wp_db_name }}'" -u "{{ wp_db_user }}" -p{{ wp_db_pass }}
  register: database_exists
  when: wp_db_root_user is not defined
  changed_when: no
  failed_when: database_exists.stdout != "{{ wp_db_name }}"

- name: check if wordpress is installed
  command: wp core is-installed --path="{{ wp_web_root }}" --allow-root
  register: is_installed
  ignore_errors: yes
  changed_when: no

# If wordpress is not installed yet
- block:

  - name: install new wordpress instance
    command: wp core install --path="{{ wp_web_root }}" --url="{{ wp_site_url }}" --title="{{ wp_site_title }}" --admin_user="{{ wp_site_user }}" --admin_password="{{ wp_site_pass }}" --admin_email="{{ wp_site_email }}" --allow-root
    when: wp_db_import is not defined

  - name: import existing database
    mysql_db: name="{{ wp_db_name }}" login_user="{{ wb_db_user }}" login_password="{{ wp_db_pass }}" state=import target="{{ wp_db_import }}"
    when: wp_db_import is defined

  when: is_installed.rc != 0
